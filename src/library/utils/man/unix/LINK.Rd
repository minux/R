% File src/library/utils/man/unix/LINK.Rd
% Part of the R package, http://www.R-project.org
% Copyright 1995-2013 R Core Team
% Distributed under GPL 2 or later

\name{LINK}
\alias{LINK}
\title{Create Executable Programs}
\description{
  Front-end for creating executable programs.
}
\usage{
\special{R CMD LINK [options] linkcmd}
}
\arguments{
  \item{linkcmd}{a list of commands to link together suitable object
    files (include library objects) to create the executable program.}
  \item{options}{further options to control the linking, or for
    obtaining information about usage and version.}
}
\details{
  The linker front-end is useful in particular when linking against the
  \R shared or static library, in which case \code{linkcmd} must contain
  \code{-lR} but need not specify its library path.

  Currently only works if the C compiler can be used for linking, and no
  C++ code is used.

  The actual linking command is constructed by the version of
  \command{libtool} installed at \file{\env{R_HOME}/bin}.

  \command{R CMD LINK --help} gives usage information.
}
\note{
  Some binary distributions of \R have \code{LINK} in a separate
  bundle, e.g. an \code{R-devel} RPM.
}
\examples{\dontrun{
CC=`R CMD config CC`
R CMD LINK $CC -o foo foo.o `R CMD config --ldflags`

## if Fortran code has been compiled into ForFoo.o
FLIBS=`R CMD config FLIBS`
R CMD LINK $CC -o foo foo.o ForFoo.o `R CMD config --ldflags` $FLIBS
}}
\keyword{utilities}
